<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>将操作应用于其他实例</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Article explaining how to apply actions to other instances" />
  <meta name="rh-index-keywords" content="GML Visual Overview - Applying Actions To Other Instances" />
  <meta name="search-keywords" content="DnD,Code DnD,Apply DnD" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>将操作应用于其他实例</h1>
  <p>GML 可视化库中的大多数动作都有一个选项，可以以不同方式应用该动作。这就是所谓的设置动作范围，它可以是几种方式之一：</p>
  <p><img alt="GML Visual Applies To" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Applies_To.png" />从本质上讲，您要告诉 GameMaker 的是哪个实例应该运行动作。默认的动作范围是 self，这意味着一旦对象在房间中创建为实例，该实例就会运行动作代码。但这并不总是您想要的，您可能希望某些动作影响到房间中的其他实例，甚至是所有实例。这就需要更改动作范围。</p>
  <p>下面列出了执行操作的不同作用域，但需要注意的是，以这种方式更改操作的作用域只会将新作用域应用于该操作，而不会应用于链中的后续操作。如果您想将动作范围的更改应用于多个连锁动作，请先使用 <a href="../Drag_And_Drop_Reference/Common/Apply_To...htm">应用到...</a> 动作。</p>
  <p><img alt="Self Icon" class="icon" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Scope_Self.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Self</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">这是动作的默认作用域，简单地说就是该动作只能被运行代码的实例调用。<br /></p>
  </div>
  <p><img alt="Other Icon" class="icon" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Scope_Other.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Other</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">other 作用域有两个主要函数，它返回的值取决于您在何处以及如何使用它。在碰撞事件中，other 将返回唯一的实例 ID 值（该唯一值用于区分每个对象的单个实例），因此，举例来说，您可以创建一个 &quot;子弹 &quot;实例，并与 &quot;玩家&quot; 实例发生碰撞事件，在碰撞事件中使用 other 作用域从 &quot;玩家 &quot;对象中移除命中点，然后返回 self 作用域销毁 &quot;子弹 &quot;实例。</p>
    <p class="dropspot">在碰撞事件之外，&quot;另一作用域&quot; 设置的行为将与设置为 noone 时一样，除非它是在一个作用域块中被调用的。这意味着，如果您将一组动作的作用域更改为特定对象，那么当这些动作被调用时，其他作用域将返回最初调用该动作组的实例的实例 ID。例如，您可以运行一个 <a data-cke-saved-href="../Drag_And_Drop_Reference/Common/Apply_To...htm" href="../Drag_And_Drop_Reference/Common/Apply_To...htm">应用到...</a> 的操作，然后在下一个代码块中将作用域设置为 other，以便对运行整个事件块的实例执行操作，而不是应用到代码块中被作用域的实例。下图给出了一个示例：</p>
    <p class="dropspot"><img alt="GML Visual Scope" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Scope_Other.png" />在图像中，我们正在检查实例中是否有鼠标按下，如果检测到鼠标按下，我们就会使用 应用到...  动作来改变作用域。接下来的两个动作块将从 &quot;obj_Player &quot;实例中调用（如果有多个实例，则将在所有实例中运行），因此该对象将改变其精灵，然后在另一个位置创建一个对象，即：正在运行事件并检测到鼠标按下的对象的位置。</p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="All Icon" class="icon" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Scope_All.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">All</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">当您将一个动作的作用域设置为 All 时，您就等于告诉 <span data-keyref="GameMaker 名称">GameMaker</span> <strong>在当前房间内的每个活动实例</strong>中运行该程序块。例如，创建一个 <a href="../Drag_And_Drop_Reference/Instance/Destroy_Object_Instance.htm">销毁物体实例</a> 动作并将其作用域设置为全部，就会使房间中的每个实例消失，无论它们是由哪个对象创建的。</p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Object Icon" class="icon" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Scope_Object.png" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">Object</a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">一个动作也可以给定一个对象作为其作用域。这意味着在调用动作的同时，给定对象的所有实例都将运行该动作。举例来说，如果房间里有 100 个敌人实例，而你想将它们全部指向一个特定的点。您可以调用 <a data-cke-saved-href="../Drag_And_Drop_Reference/Movement/Set_Point_Direction.htm" href="../Drag_And_Drop_Reference/Movement/Set_Point_Direction.htm">设置点方向</a>，并将动作范围设置为对象 &quot;obj_Enemy&quot;，当调用该动作时，该对象的所有实例都将改变方向。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">表达式</a></p>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot">表达式输入字段用于输入希望对其执行操作的特定实例的 ID。它可以是房间编辑器分配给实例的唯一 ID 值，也可以是存储在变量中的实例 ID（变量就是输入值），甚至可以是使用代码的表达式，如下图所示：</p>
    <p class="dropspot"><img alt="GML Visual Target" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Scope_Target.png" />在这种情况下，实例会从表达式所给代码创建的实例中调用 <a data-cke-saved-href="../Drag_And_Drop_Reference/Instance/Set_Sprite.htm" href="../Drag_And_Drop_Reference/Instance/Set_Sprite.htm">设置精灵</a>。请注意，在这种情况下，被创建的实例将首先运行其创建事件，然后才会对其执行操作。</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../../Content.htm">Index</a></div>
        <div style="float:right">Next: <a href="Action_Block_Functions.htm">Action Block Scripts</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
GML Visual Applying Actions
-->
  <!-- TAGS
drag_and_drop_applying
-->
</body>
</html>