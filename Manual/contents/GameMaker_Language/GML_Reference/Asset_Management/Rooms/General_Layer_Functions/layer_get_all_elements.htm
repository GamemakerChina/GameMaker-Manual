<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>layer_get_all_elements</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function layer_get_all_elements" />
  <meta name="rh-index-keywords" content="layer_get_all_elements" />
  <meta name="search-keywords" content="layer_get_all_elements" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>layer_get_all_elements</h1>
  <p>You can use this function to get the <i>element IDs</i> of the given layer. You supply the layer ID (which you get when you create the layer using <a href="layer_create.htm"><span class="inline">layer_create()</span></a>) or the layer name (as a string - this will have a performance impact) and the function will return an <a href="../../../../GML_Overview/Arrays.htm">array</a> of IDs, where each entry in the array is a unique ID for an element on that layer. For example, if the layer is an Asset Layer, the array will be populated with the ID values for each sprite asset that is assigned to the layer. Note that using code to work with layers means that you can assign different element types to the same layer - so you can have sprite assets along with instances, for example - in which case you can then use the function <a href="layer_get_element_type.htm"><span class="inline">layer_get_element_type()</span></a> to get the type of element the ID relates to.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">layer_get_all_elements(layer_id)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>layer_id</td>
        <td><span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../../../LINKGOESHERE">String</a></span> or <span data-keyref="Type_ID_Layer"><a data-rhwidget="HyperlinkPopover" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Rooms/General_Layer_Functions/layer_get_id.htm">Layer ID</a></span></td>
        <td>The unique ID value of the layer to get the elements from (or the layer name as a string)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Array"><a data-rhwidget="HyperlinkPopover" href="../../../../../../GameMaker_Language/GML_Overview/Arrays.htm">Array</a></span> of <span data-keyref="Type_ID_Layer_Element"><a data-rhwidget="HyperlinkPopover" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Rooms/General_Layer_Functions/layer_get_all_elements.htm">Layer Element ID</a></span>s</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var a = layer_get_all_elements(layer);<br />
    for (var i = 0; i &lt; array_length(a); i++;)<br />
    {<br />
        if layer_get_element_type(a[i]) == layerelementtype_sprite<br />
        {<br />
            layer_sprite_destroy(a[i])<br />
        }<br />
    }</p>
  <p>The above code gets the IDs for all the instance elements assigned to the layer of the instance running the code. The code then checks to see if any of the returned elements are sprite assets and if they then they are destroyed.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="General_Layer_Functions.htm">General Layer Functions</a></div>
        <div style="float:right">Next: <a href="layer_get_element_layer.htm">layer_get_element_layer</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
layer_get_all_elements
-->
  <!-- TAGS
layer_get_all_elements
-->
</body>
</html>